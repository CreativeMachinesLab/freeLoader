#ifndef GANTRY_H
#define GANTRY_H

#include <QObject>
#include <QtXml/QDomElement>
#include "dynamixel.h"
#include "loadcell.h"
#include <QVector>

class Gantry : public QObject
{
    Q_OBJECT
public:
    explicit Gantry(QDomElement configfile, QObject *parent = 0);
    // this will create the Dynamizel and Loacell at startup
    
    bool connect();
    bool hasDyna();
    bool hasCell();
    bool initialized();
    
    float position();
    float getRange();
    QVector<float> getState(); // returns [time in abs, position in mm from home, loadin newtons]    
    
public slots:
    void setHome();
    void setHome(float distInMM);
    void setSpeed(float speedInMMPerMin);

signals:
    void dyna(bool);
    void cell(bool);

    
private:
    // Internal config
    float mmPerRev_;
    float range_;   
    Dynamixel* dyna;
    LoadCell* cell;
    
    

    

    QVector<float> lastState_;
    
};

#endif // GANTRY_H
