TODO:

Implementation:
* Load config files in config file manager (DONE)
* write files to CSV in testdata (DONE)
* config loading for dyanmixel (DONE)
* config loading for loadcell   (DONE)
* Gantry Constructor / config loading (DONE)
* calculateCurrentPosition

-maybe add deadzone to config file?
-there are two values of alpha and beta, one for compressive and one for tensile,
    but our configfile only holds one and our dyna doesn't account for this,
    so I added them.


Conceptual
* system for querying the potential serial numbers and comports


<<<<<<< HEAD
=======
char Buffer [3][64]; // more than enough room, maximum 3 USB to serial devices
for(int i=0;i<numDevs;i++) //for each device detected
{
        devIndex = i;
        ftStatus = FT_ListDevices((PVOID)devIndex,Buffer[i],FT_LIST_BY_INDEX|FT_OPEN_BY_SERIAL_NUMBER);
        if (ftStatus == FT_OK)
                std::cout << "\n Device " << i+1 << " serial number: " << Buffer[i];
        else
        {
                std::cerr << "\nFT_ListDevices failed to get serial number!";
                Sleep(2000);
            return 0;
        }
>>>>>>> origin/master
